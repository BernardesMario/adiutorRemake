# Generated by Django 4.2.6 on 2023-11-10 03:52

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CadastroGrupos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(limit_value=4)], verbose_name='Nome')),
                ('prontuario_grupo_numero', models.CharField(max_length=5, unique=True, validators=[main.models.validate_numbers, django.core.validators.MinLengthValidator(limit_value=4)], verbose_name='Nº Prontuário do Grupo')),
                ('desligado', models.BooleanField(default=False, help_text='Grupo encerrado', verbose_name='Desativado')),
                ('data_inicio', models.DateField(help_text='dd/mm/aaaa', verbose_name='Data de Inicio')),
                ('data_final', models.DateField(blank=True, help_text='dd/mm/aaaa', null=True, verbose_name='Data do Desligamento')),
            ],
            options={
                'verbose_name': 'Grupo',
                'verbose_name_plural': 'Grupos',
                'permissions': [('transfer_group', 'Transferir Grupo (Terapeutas)'), ('deslig_group', 'Desligar Grupo (Terapeutas)')],
            },
        ),
        migrations.CreateModel(
            name='CadastroPacientes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, validators=[main.models.validate_letters, django.core.validators.MinLengthValidator(limit_value=5)], verbose_name='Nome do Paciente')),
                ('prontuario_numero', models.CharField(max_length=7, unique=True, validators=[main.models.validate_numbers, django.core.validators.MinLengthValidator(limit_value=7)], verbose_name='Nº de Prontuario')),
                ('nascimento', models.DateField(help_text='dd/mm/aaaa', verbose_name='Data de Nascimento')),
                ('responsavel_legal', models.CharField(blank=True, max_length=100, null=True, validators=[main.models.validate_letters, django.core.validators.MinLengthValidator(limit_value=5)], verbose_name='Responsável Legal')),
                ('data_inicio', models.DateField(help_text='dd/mm/aaaa', verbose_name='Data de Inicio')),
                ('data_final', models.DateField(blank=True, help_text='dd/mm/aaaa', null=True, verbose_name='Data do Desligamento')),
                ('desligado', models.BooleanField(default=False, help_text='Paciente desligado', verbose_name='Desligado')),
                ('cpf_numero', models.CharField(max_length=11, unique=True, validators=[main.models.validate_numbers, django.core.validators.MinLengthValidator(limit_value=11)], verbose_name='CPF')),
                ('modalidade_atendimento', models.IntegerField(choices=[(0, 'Individual'), (1, 'Grupo'), (2, 'Casal')], verbose_name='Modalidade')),
                ('carteirinha_convenio', models.CharField(blank=True, max_length=50, null=True, validators=[main.models.validate_numbers, django.core.validators.MinLengthValidator(limit_value=7)], verbose_name='Número do Convênio')),
                ('endereco_rua', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(limit_value=10)], verbose_name='Endereço')),
                ('endereco_bairro', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(limit_value=10)], verbose_name='Bairro')),
                ('endereco_numero', models.IntegerField(validators=[django.core.validators.MaxLengthValidator(limit_value=7)], verbose_name='Número')),
                ('endereco_completmento', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(limit_value=4)], verbose_name='Complemento')),
                ('telefone_numero', models.CharField(max_length=11, validators=[main.models.validate_numbers, django.core.validators.MinLengthValidator(limit_value=11)], verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['nome'],
                'permissions': [('transfer_pac', 'Transferir Paciente (Terapeutas)'), ('deslig_pac', 'Desligar Paciente (Terapeutas)'), ('add_pac_group', 'Adicionar Paciente a Grupo (Terapeutas')],
            },
        ),
        migrations.CreateModel(
            name='CadastroProfissionais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, validators=[main.models.validate_letters], verbose_name='Nome')),
                ('conselho_codigo', models.CharField(max_length=5, unique=True, validators=[main.models.validate_numbers], verbose_name='CRP')),
                ('unimed_codigo', models.CharField(max_length=6, unique=True, validators=[main.models.validate_numbers], verbose_name='Número cadastro Unimed')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('telefone_numero', models.CharField(max_length=11, validators=[main.models.validate_numbers], verbose_name='Telefone')),
                ('endereco_rua', models.CharField(max_length=100, verbose_name='Endereço')),
                ('endereco_bairro', models.CharField(max_length=50, verbose_name='Bairro')),
                ('endereco_numero', models.IntegerField(validators=[django.core.validators.MaxLengthValidator(limit_value=7)], verbose_name='Número')),
                ('endereco_completmento', models.CharField(max_length=100, verbose_name='Complemento')),
                ('cpf_numero', models.CharField(max_length=11, unique=True, validators=[main.models.validate_numbers], verbose_name='CPF')),
                ('rg_numero', models.IntegerField(validators=[django.core.validators.MaxLengthValidator(limit_value=12)], verbose_name='Número RG')),
                ('rg_emissor', models.CharField(max_length=50, verbose_name='Orgão Emissor RG')),
                ('usuario_codigo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Terapeutas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Terapeuta',
                'verbose_name_plural': 'Terapeutas',
                'permissions': [('add_terapeuta', 'Adicionar novos Usuários (Administrativos)')],
            },
        ),
        migrations.CreateModel(
            name='ConveniosAceitos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(limit_value=3)], verbose_name='Convênio')),
            ],
            options={
                'verbose_name': 'Convênio',
                'verbose_name_plural': 'Convênios',
                'permissions': [('add_convenio', 'Adicionar Novo Convenio (Administrativos)')],
            },
        ),
        migrations.CreateModel(
            name='ProntuariosGrupos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_entrada', models.DateField(auto_now_add=True, verbose_name='Data da Entrada')),
                ('data_consulta', models.DateField(verbose_name='Data da Consulta')),
                ('entrada', models.TextField(validators=[django.core.validators.MinLengthValidator(limit_value=10)], verbose_name='Parecer')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prontuario_grupo', to='main.cadastroprofissionais', to_field='nome', verbose_name='Terapeuta Responsável')),
                ('numero', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupo', to='main.cadastrogrupos', to_field='prontuario_grupo_numero', verbose_name='Nº Prontuário do Grupo')),
            ],
            options={
                'verbose_name': 'Prontuário Grupo',
                'verbose_name_plural': 'Prontuários Grupos',
                'permissions': [('add_entry_group', 'Adicionar entradas em prontuários de Grupo (Terapeutas)')],
            },
        ),
        migrations.CreateModel(
            name='Prontuarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_entrada', models.DateField(auto_now_add=True, verbose_name='Data da Entrada')),
                ('data_consulta', models.DateField(verbose_name='Data da Consulta')),
                ('entrada', models.TextField(validators=[django.core.validators.MinLengthValidator(limit_value=10)], verbose_name='Parecer')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='prontuarios', to='main.cadastroprofissionais', to_field='nome', verbose_name='Terapeuta')),
                ('numero', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paciente', to='main.cadastropacientes', to_field='prontuario_numero', verbose_name='Nº de Prontuário')),
            ],
            options={
                'verbose_name': 'Prontuário',
                'verbose_name_plural': 'Prontuários',
                'permissions': [('add_entry', 'Adicionar entradas em prontuários (Terapeutas)')],
            },
        ),
        migrations.CreateModel(
            name='PresencasGrupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data')),
                ('consulta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Consulta', to='main.prontuariosgrupos', verbose_name='Consulta')),
                ('grupo_prontuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.cadastrogrupos', to_field='prontuario_grupo_numero', verbose_name='Grupo nº')),
                ('pacientes', models.ManyToManyField(to='main.cadastropacientes')),
            ],
            options={
                'verbose_name': 'Presença',
                'verbose_name_plural': 'Presenças',
            },
        ),
        migrations.AddField(
            model_name='cadastropacientes',
            name='convenio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pacientes', to='main.conveniosaceitos'),
        ),
        migrations.AddField(
            model_name='cadastropacientes',
            name='grupo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='membros', to='main.cadastrogrupos'),
        ),
        migrations.AddField(
            model_name='cadastropacientes',
            name='terapeuta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pacientes', to='main.cadastroprofissionais'),
        ),
        migrations.AddField(
            model_name='cadastrogrupos',
            name='terapeuta_auxiliar1',
            field=models.ManyToManyField(blank=True, to='main.cadastroprofissionais', verbose_name='Terapeuta Auxiliar'),
        ),
        migrations.AddField(
            model_name='cadastrogrupos',
            name='terapeuta_responsavel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos', to='main.cadastroprofissionais', verbose_name='Terapeuta Responsável'),
        ),
    ]
